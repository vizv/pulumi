# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: analyzer.proto for package 'pulumirpc'
# Original file comments:
# Copyright 2016-2018, Pulumi Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'analyzer_pb'

module Pulumirpc
  module Analyzer
    # Analyzer provides a pluggable interface for checking resource definitions against some number of
    # resource policies. It is intentionally open-ended, allowing for implementations that check
    # everything from raw resource definitions to entire projects/stacks/snapshots for arbitrary
    # issues -- style, policy, correctness, security, and so on.
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'pulumirpc.Analyzer'

      # Analyze analyzes a single resource object, and returns any errors that it finds.
      # Called with the "inputs" to the resource, before it is updated.
      rpc :Analyze, ::Pulumirpc::AnalyzeRequest, ::Pulumirpc::AnalyzeResponse
      # AnalyzeStack analyzes all resources within a stack, at the end of a successful
      # preview or update. The provided resources are the "outputs", after any mutations
      # have taken place.
      rpc :AnalyzeStack, ::Pulumirpc::AnalyzeStackRequest, ::Pulumirpc::AnalyzeResponse
      # GetAnalyzerInfo returns metadata about the analyzer (e.g., list of policies contained).
      rpc :GetAnalyzerInfo, ::Google::Protobuf::Empty, ::Pulumirpc::AnalyzerInfo
      # GetPluginInfo returns generic information about this plugin, like its version.
      rpc :GetPluginInfo, ::Google::Protobuf::Empty, ::Pulumirpc::PluginInfo
      # Configure configures the analyzer, passing configuration properties for each policy.
      rpc :Configure, ::Pulumirpc::ConfigureAnalyzerRequest, ::Google::Protobuf::Empty
    end

    Stub = Service.rpc_stub_class
  end
end
